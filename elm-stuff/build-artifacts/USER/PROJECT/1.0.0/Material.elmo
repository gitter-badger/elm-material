Elm.Material = Elm.Material || {};
Elm.Material.make = function (_elm) {
   "use strict";
   _elm.Material = _elm.Material || {};
   if (_elm.Material.values)
   return _elm.Material.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Material",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Graphics$Input = Elm.Graphics.Input.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm);
   var headerStyle = _U.replace([["height"
                                 ,$Maybe.Just(50)]],
   $Text.defaultStyle);
   var title = function (string) {
      return $Graphics$Element.leftAligned($Text.style(headerStyle)($Text.fromString(string)));
   };
   var lTitleSize = 112;
   var lIconRowHeight = 56;
   var lTitleMarginBottom = 16;
   var lToolbarMarginLeft = 16;
   var lToolbarHeight = 128;
   var toolbarIconSize = 24;
   var hamburger = A3($Graphics$Element.image,
   toolbarIconSize,
   toolbarIconSize,
   "hamburger.svg");
   var lTitleMarginLeft = 72 - lToolbarMarginLeft - toolbarIconSize;
   var toolbar = F3(function (_v0,
   string,
   message) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return $Graphics$Element.color($Color.green)(A4($Graphics$Element.container,
              _v0._0,
              lToolbarHeight,
              $Graphics$Element.midLeft,
              A2($Graphics$Element.flow,
              $Graphics$Element.right,
              _L.fromArray([A2($Graphics$Element.spacer,
                           lToolbarMarginLeft,
                           1)
                           ,$Graphics$Input.clickable(message)(hamburger)
                           ,A2($Graphics$Element.spacer,
                           lTitleMarginLeft,
                           1)
                           ,title(string)]))));}
         _U.badCase($moduleName,
         "between lines 83 and 92");
      }();
   });
   var scrim = function (_v4) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return $Graphics$Element.opacity(0.5)($Graphics$Element.color($Color.black)(A2($Graphics$Element.spacer,
              _v4._0,
              _v4._1)));}
         _U.badCase($moduleName,
         "between lines 34 and 36");
      }();
   };
   var CloseNavDrawer = function (a) {
      return {ctor: "CloseNavDrawer"
             ,_0: a};
   };
   var drawerOption = F2(function (address,
   page) {
      return $Graphics$Input.clickable(A2($Signal.message,
      address,
      CloseNavDrawer($Maybe.Just(page))))(A4($Graphics$Element.container,
      340,
      100,
      $Graphics$Element.middle,
      $Graphics$Element.centered($Text.fromString(page.title))));
   });
   var drawerOptions = F2(function (address,
   pages) {
      return $Graphics$Element.color($Color.white)(A2($Graphics$Element.flow,
      $Graphics$Element.down,
      A2($List.map,
      drawerOption(address),
      pages)));
   });
   var navigationDrawer = F3(function (_v8,
   pages,
   address) {
      return function () {
         switch (_v8.ctor)
         {case "_Tuple2":
            return A2($Graphics$Element.flow,
              $Graphics$Element.right,
              _L.fromArray([A2(drawerOptions,
                           address,
                           pages)
                           ,$Graphics$Input.clickable(A2($Signal.message,
                           address,
                           CloseNavDrawer($Maybe.Nothing)))(scrim({ctor: "_Tuple2"
                                                                  ,_0: _v8._0
                                                                  ,_1: _v8._1}))]));}
         _U.badCase($moduleName,
         "between lines 44 and 48");
      }();
   });
   var OpenNavDrawer = {ctor: "OpenNavDrawer"};
   var Page = F2(function (a,b) {
      return {_: {}
             ,content: a
             ,title: b};
   });
   _elm.Material.values = {_op: _op
                          ,Page: Page
                          ,OpenNavDrawer: OpenNavDrawer
                          ,CloseNavDrawer: CloseNavDrawer
                          ,drawerOption: drawerOption
                          ,drawerOptions: drawerOptions
                          ,scrim: scrim
                          ,navigationDrawer: navigationDrawer
                          ,toolbarIconSize: toolbarIconSize
                          ,hamburger: hamburger
                          ,lToolbarHeight: lToolbarHeight
                          ,lToolbarMarginLeft: lToolbarMarginLeft
                          ,lTitleMarginLeft: lTitleMarginLeft
                          ,lTitleMarginBottom: lTitleMarginBottom
                          ,lIconRowHeight: lIconRowHeight
                          ,lTitleSize: lTitleSize
                          ,toolbar: toolbar
                          ,headerStyle: headerStyle
                          ,title: title};
   return _elm.Material.values;
};