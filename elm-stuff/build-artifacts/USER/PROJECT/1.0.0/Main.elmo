Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Material = Elm.Material.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Window = Elm.Window.make(_elm);
   var body = F2(function (_v0,
   content) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return A4($Graphics$Element.container,
              _v0._0,
              _v0._1,
              $Graphics$Element.middle,
              content);}
         _U.badCase($moduleName,
         "on line 52, column 3 to 35");
      }();
   });
   var action = $Signal.mailbox($Material.OpenNavDrawer);
   var stuff = {_: {}
               ,content: $Graphics$Element.centered($Text.fromString("Stuff"))
               ,title: "stuff page"};
   var helloWorld = {_: {}
                    ,content: $Graphics$Element.centered($Text.fromString("Hello World"))
                    ,title: "helloWorld page"};
   var pages = _L.fromArray([helloWorld
                            ,stuff]);
   var view = F2(function (_v4,
   state) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return function () {
                 switch (state.ctor)
                 {case "MainView":
                    return $Debug.log("view mainview")(A2($Graphics$Element.flow,
                      $Graphics$Element.down,
                      _L.fromArray([A3($Material.toolbar,
                                   {ctor: "_Tuple2"
                                   ,_0: _v4._0
                                   ,_1: 180},
                                   "Title",
                                   A2($Signal.message,
                                   action.address,
                                   $Material.OpenNavDrawer))
                                   ,A2(body,
                                   {ctor: "_Tuple2"
                                   ,_0: _v4._0
                                   ,_1: _v4._1 - 180},
                                   state._0)])));
                    case "NavBar":
                    return $Debug.log("view navBar")($Graphics$Element.layers(_L.fromArray([A2($Graphics$Element.flow,
                                                                                           $Graphics$Element.down,
                                                                                           _L.fromArray([A3($Material.toolbar,
                                                                                                        {ctor: "_Tuple2"
                                                                                                        ,_0: _v4._0
                                                                                                        ,_1: 180},
                                                                                                        "Title",
                                                                                                        A2($Signal.message,
                                                                                                        action.address,
                                                                                                        $Material.OpenNavDrawer))
                                                                                                        ,A2(body,
                                                                                                        {ctor: "_Tuple2"
                                                                                                        ,_0: _v4._0
                                                                                                        ,_1: _v4._1 - 180},
                                                                                                        state._0)]))
                                                                                           ,A4($Material.navigationDrawer,
                                                                                           _v4._0,
                                                                                           _v4._1,
                                                                                           pages,
                                                                                           action.address)])));}
                 _U.badCase($moduleName,
                 "between lines 56 and 69");
              }();}
         _U.badCase($moduleName,
         "between lines 56 and 69");
      }();
   });
   var NavBar = function (a) {
      return {ctor: "NavBar"
             ,_0: a};
   };
   var MainView = function (a) {
      return {ctor: "MainView"
             ,_0: a};
   };
   var update = F2(function (action,
   state) {
      return function () {
         var content = function () {
            switch (state.ctor)
            {case "MainView":
               return state._0;
               case "NavBar": return state._0;}
            _U.badCase($moduleName,
            "between lines 76 and 79");
         }();
         return function () {
            switch (action.ctor)
            {case "CloseNavDrawer":
               switch (action._0.ctor)
                 {case "Just":
                    return MainView(action._0._0);
                    case "Nothing":
                    return MainView(content);}
                 break;
               case "OpenNavDrawer":
               return NavBar(content);}
            _U.badCase($moduleName,
            "between lines 79 and 82");
         }();
      }();
   });
   var main = $Debug.watch("action.signal")(A2($Signal.map2,
   view,
   $Window.dimensions)(A2($Signal.foldp,
   update,
   MainView(helloWorld.content))(action.signal)));
   _elm.Main.values = {_op: _op
                      ,main: main
                      ,MainView: MainView
                      ,NavBar: NavBar
                      ,helloWorld: helloWorld
                      ,stuff: stuff
                      ,pages: pages
                      ,action: action
                      ,body: body
                      ,view: view
                      ,update: update};
   return _elm.Main.values;
};